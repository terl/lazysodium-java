name: Checks

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: ${{ matrix.os }} ${{ matrix.arch }} check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        arch: [x64]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
          architecture: ${{ matrix.arch }}
      - name: Test with Gradle
        run: ./gradlew test

  test-on-mac-arm:
    name: ${{ matrix.os }} ${{ matrix.arch }} check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        arch: [arm64]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java on ARM64
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Test with Gradle
        run: ./gradlew test

  publish:
    name: Publish to snapshot repo if master branch
    runs-on: ubuntu-latest
    needs: [test, test-on-mac-arm]
    if: github.ref == 'refs/heads/master' && always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - uses: actions/checkout@v3
        if: env.WORKFLOW_CONCLUSION == 'success'
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21
        if: env.WORKFLOW_CONCLUSION == 'success'
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
        if: env.WORKFLOW_CONCLUSION == 'success'
      - name: Publish
        run: ./gradlew publishSnapshotPublicationToSnapshotRepository -Psigning.gnupg.keyName="${{ secrets.GPG_SIGNING_SUBKEY_ID }}" -Psigning.password="${{ secrets.GPG_PASSPHRASE }}" -PossrhUsername="${{ secrets.SONATYPE_USER }}" -PossrhPassword="${{ secrets.SONATYPE_PASSWORD }}"
        if: env.WORKFLOW_CONCLUSION == 'success'
